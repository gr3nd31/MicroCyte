getwd()
q()
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
#install.packages("ggplot2")
#install.packages("ggpubr")
#install.packages("MASS")
#install.packages("viridis")
#install.packages("stringr")
devtools::install_github("vqv/ggbiplot")
# This opens the various packages required for this spell
suppressPackageStartupMessages(library(imager))
install.packages("imager")
install.packages("magick")
tinytex::install_tinytex()
x <- read.csv("Downloads/bad_gapminder.csv")
x
americas <- subset(x, continent == "Americas")
nrow(americas)
head(americas)
library(dplyr)
ti <- as_tibble(americas)
ti
ti <- ti[,-2]
ti
?pivot_longer
??pivot_longer
library(tidyr)
q()
ti
x <- read.csv("Downloads/bad_gapminder.csv")
americas <- subset(x, Continent == "Americas")
americas <- subset(x, continent == "Americas")
americas
ti <- americas[,-2]
head(ti)
ti <- tidyr::as_tibble()
ti <- tidyr::as_tibble(ti)
ti
ti <- americas[,-2]
ti
ti %>% tidyr::as_tibble(ti)
x <- tidyr::as_tibble(ti)
x
x <- tidyr::pivot_longer(z[,3:], names_to="year", values_to="value")
x <- tidyr::pivot_longer(z[,3:ncol(x)], names_to="year", values_to="value")
x <- tidyr::pivot_longer(x[,3:ncol(x)], names_to="year", values_to="value")
x <- tidyr::pivot_longer(!country, names_to="year", values_to="value")
x %>% tidyr::pivot_longer(!country, names_to="year", values_to="value")
x %<% tidyr::pivot_longer(!country, names_to="year", values_to="value")
library(dplyr)
library(tidyr)
x %>% pivot_longer(!country, names_to="year", values_to="value")
x %>% pivot_longer(x[,3:ncol(x)], names_to="year", values_to="value")
x
y %>% pivot_longer(x[,3:ncol(x)], names_to="year", values_to="value")
x
x %>% pivot_longer(x[,3:ncol(x)], names_to="year", values_to="value")
x %>% pivot_longer(names(x)[,3:ncol(x)], names_to="year", values_to="value")
x %>% pivot_longer(names(x)[3:ncol(x)], names_to="year", values_to="value")
x
y <- x %>% pivot_longer(names(x)[3:ncol(x)], names_to="year", values_to="value")
y
y %>% pivot_wider(names_from = measurement, values_from = value)
z <- y %>% pivot_wider(names_from = measurement, values_from = value)
z$totalGDP_B <- z$pop*z$gdpPercap/1000000000
z
datum <- read_csv("Downloads/bad_gapminder.csv")
install.packages("tidyverse")
library(tidyverse)
datum <- read_csv("Downloads/bad_gapminder.csv")
datum
americas <- subset(datum, continent == "Americas")
nrow(americas)
ti <- americas %>% pivot_longer(names(americas)[4:ncol(americas)], names_to = year, values_to = values)
ti <- americas %>% pivot_longer(names(americas)[4:ncol(americas)], names_to = "year", values_to = "value")
ti
ti <- ti[,-2]
ti
it <- ti %>% pivot_wider(names_from = measurement, values_from = value)
it
it$totalGDP_B <- it$pop*it$gdpPercap/1000000000
it
unique(it$year)
q()
library(tidyverse)
datum <- read_csv("Downloads/bad_gapminder.csv")
datum
americas <- subset(datum, continents == "Americas")
americas <- subset(datum, continent == "Americas")
americas
americas <- americas[,-2]
americas
#Collapse year data down
LongerAmericas <- americas %>% pivot_longer(names(americas)[3:ncol(americas)], names_to="year", values_to="value")
LongerAmericas
#Widen the data from the measurements
widerAmericas <- LongerAmericas %>% pivot_wider(names_from = measurement, values_from=value)
widerAmericas
#Now we'll calculate total GDP
widerAmericas$totalGDP <- widerAmericas$pop*widerAmericas$gdpPercap/1000000000
widerAmericas
#Don't need the pop or GDP/cap anymore, so lets get rid of those
widerAmericas <- cbind(widerAmericas[,1:2], widerAmericas[5])
widerAmericas
id
#Collapse year data down
LongerAmericas <- americas %>% pivot_longer(names(americas)[3:ncol(americas)], names_to="year", values_to="value")
#Widen the data from the measurements
widerAmericas <- LongerAmericas %>% pivot_wider(names_from = measurement, values_from=value)
#Now we'll calculate total GDP per billion
widerAmericas$totalGDP <- widerAmericas$pop*widerAmericas$gdpPercap/1000000000
widerAmericas
#Don't need the pop or GDP/cap anymore, so lets get rid of those
widerAmericas <- widerAmericas[,-3]
widerAmericas <- widerAmericas[,-3]
widerAmericas
#Now we can widen again to do some row calculations
widestAmericas <- widerAmericas %>% pivot_wider(names_from = year, values_from=totalGDP)
widestAmericas
#Now we can widen again to do some row calculations
widestAmericas <- widerAmericas %>% pivot_wider(names_from = country, values_from=totalGDP)
widestAmericas
#Now we can caluclate the mean and standard deviation for each year
widestAmericas$mean <- mean(widestAmericas[,2:ncol(widestAmericas)])
#Now we can caluclate the mean and standard deviation for each year
widestAmericas$mean <- mean(widestAmericas[,-1])
widestAmericas
widestAmericas$mean
widerAmericas
#Now we can widen again to do some row calculations
widestAmericas <- widerAmericas %>% pivot_wider(names_from = country, values_from=totalGDP)
temp <- widestAmericas[,-1]
temp
temp$mean <- mean(temp)
temp$mean <- sum(temp)
temp$mean <- temp$mean/ncol(temp)
widestAmericas$mean <- sum(widestAmericas[,-1])
widestAmericas$mean <- widestAmericas/ncol(widestAmericas)-1
widestAmericas$mean <- widestAmericas$mean/(ncol(widestAmericas)-1)
#Now we can widen again to do some row calculations
widestAmericas <- widerAmericas %>% pivot_wider(names_from = country, values_from=totalGDP)
#Now we can caluclate the mean and standard deviation for each year
#I was going to use teh mean() function, but that seemed to have some issues with the tibble format soooo.... I went the long way
widestAmericas$mean <- sum(widestAmericas[,-1])/(ncol(widestAmericas)-1)
widestAmericas$mean
#Now we can widen again to do some row calculations
widestAmericas <- widerAmericas %>% pivot_wider(names_from = country, values_from=totalGDP)
temp <-as.data.frame(widestAmericas)
temp
temp$mean <- mean(temp)
widestAmericas
temp <- widestAmericas`
``
temp <- widestAmericas
temp
temp$sum <- sum(temp[,-1])
temp$sum
sum(temp[1,])
temp <- widestAmericas[,-1]
temp
sum(temp[1,])
temp$sum <- sum(temp[,-1])
temp$sum <- sum(temp)
temp$sum
man apply
?apply
temp$sum <- apply(temp, 1, sum)
temp$sum
temp$mean <- apply(temp, 1, mean)
temp$mean
ncol(temp)
temp <- widestAmericas[,-1]
temp$mean <- apply(temp, 1, mean)
temp$mean
#Now we can calculate the mean and standard deviation for each year
widestAmericas$mean <- apply(widestAmericas[,-1], 1, mean)
widestAmericas$mean
#Now we can widen again to do some row calculations
widestAmericas <- widerAmericas %>% pivot_wider(names_from = country, values_from=totalGDP)
#Now we can calculate the mean and standard deviation for each year
temp <- widestAmericas
widestAmericas$mean <- apply(temp[,-1], 1, mean)
widestAmericas$sterr <- apply(temp[,-1],1,sd)/sqrt(ncol(temp))
widestAmericas$mean
widestAmericas$sterr
library(ggpubr)
draft <-ggbarplot(data = widestAmericas, x = year, y = mean)
draft <-ggbarplot(data = widestAmericas, x = "year", y = "mean")
draft
draft <- ggplot(data = widestAmericas, aes(x = "year", y = "mean"))+geom_bar()
draft
draft <- ggplot(data = widestAmericas, aes(x = "year", y = "mean"))+geom_bar(stat = "identity")
draft
draft <- ggplot(data = widestAmericas, aes(x = year, y = mean))+geom_bar(stat = "identity")
draft
#You can get rid of everything you don't need, and/or just make the graph
draft <- ggplot(data = widestAmericas, aes(x = year, y = mean))+geom_bar(stat = "identity")+geom_errorbar()
draft
?geom_errorbar
#You can get rid of everything you don't need, and/or just make the graph
draft <- ggplot(data = widestAmericas, aes(x = year, y = mean))+geom_bar(stat = "identity")+geom_errorbar(aes(ymin = widestAmericas$sterr, ymax = widestAmericas$sterr))
draft
#You can get rid of everything you don't need, and/or just make the graph
draft <- ggplot(data = widestAmericas, aes(x = year, y = mean))+geom_bar(stat = "identity")+geom_errorbar(aes(ymin = sterr, ymax = sterr), position = "dodge", width = 0.25)
draft
#You can get rid of everything you don't need, and/or just make the graph
draft <- ggplot(data = widestAmericas, aes(x = year, y = mean))+geom_bar(stat = "identity")+geom_errorbar(aes(ymin = mean-sterr, ymax = sterr+mean))
draft
rm(draft)
draft
source('~/Desktop/someDataThings.R')
draft
q()
getwd()
setwd("/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/")
x <- read.csv("../../schema.csv")
x
x <- rbind(x, c("JNp31.1", "dna", "edu", "geminin", "NA"))
x
x <- rbind(x, c("JNp31.2", "dna", "edu", "geminin", "NA"))
x
getwd()
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
x <- list.files()
x
"analysis" %in% x
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
dirGen()
dirGen(idType = "number")
dirGen(idType = "number")
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
dirGen(idType = "number")
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
source('/lair/grendel/creations/code/gits/MicroCyte/bin/scripts/1_dirGen.R')
q()
